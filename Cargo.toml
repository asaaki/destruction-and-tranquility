[package]
name = "destruction_and_tranquility"
version = "0.1.0"
edition = "2021"
license = "MIT OR Apache-2.0"
publish = false
build = "build.rs"

[lib]
name = "destruction_and_tranquility_game"

[[bin]]
name = "destruction_and_tranquility"
path = "src/bin/dat.rs"

# https://fasterthanli.me/articles/why-is-my-rust-build-so-slow
[profile.release]
opt-level = 3
lto = true
codegen-units = 1
incremental = true
strip = true

[profile.wasm-release]
inherits = "release"
opt-level = 'z'

[profile.dev]
opt-level = 1

[profile.dev.package."*"]
opt-level = 3

[dependencies]
bevy = { version = "0.12.1", features = ["wayland"] }
bevy_embedded_assets = "0.9.1"
# bevy_mod_picking = "0.17.0"
# bevy_mouse_tracking_plugin = "0.7.0"
bevy_prng = { version = "0.2", features = [
    "rand_chacha",
    "rand_pcg",
    "rand_xoshiro",
    "wyrand",
] }
bevy_rand = "0.4"
bevy_svg = "0.12.0"
itertools = "0.12.0"
leafwing-input-manager = "0.11.2"
lol_alloc = "0.4.0"
rand = "0.8.5"
shadow-rs = { version = "0.25.0", default-features = false }
web-time = "0.2.3"

[build-dependencies]
shadow-rs = "0.25.0"

[lints.clippy]
all = "warn"
await_holding_lock = "warn"
char_lit_as_u8 = "warn"
checked_conversions = "warn"
dbg_macro = "warn"
debug_assert_with_mut_call = "warn"
doc_markdown = "warn"
empty_enum = "warn"
enum_glob_use = "warn"
exit = "warn"
expl_impl_clone_on_copy = "warn"
explicit_deref_methods = "warn"
explicit_into_iter_loop = "warn"
fallible_impl_from = "warn"
filter_map_next = "warn"
flat_map_option = "warn"
float_cmp_const = "warn"
fn_params_excessive_bools = "warn"
from_iter_instead_of_collect = "warn"
if_let_mutex = "warn"
implicit_clone = "warn"
imprecise_flops = "warn"
inefficient_to_string = "warn"
invalid_upcast_comparisons = "warn"
large_digit_groups = "warn"
large_stack_arrays = "warn"
large_types_passed_by_value = "warn"
let_unit_value = "warn"
linkedlist = "warn"
lossy_float_literal = "warn"
macro_use_imports = "warn"
manual_ok_or = "warn"
map_err_ignore = "warn"
map_flatten = "warn"
map_unwrap_or = "warn"
match_on_vec_items = "warn"
match_same_arms = "warn"
match_wild_err_arm = "warn"
match_wildcard_for_single_variants = "warn"
mem_forget = "warn"
mismatched_target_os = "warn"
missing_enforced_import_renames = "warn"
mut_mut = "warn"
mutex_integer = "warn"
needless_borrow = "warn"
needless_continue = "warn"
needless_for_each = "warn"
option_option = "warn"
path_buf_push_overwrite = "warn"
ptr_as_ptr = "warn"
rc_mutex = "warn"
ref_option_ref = "warn"
rest_pat_in_fully_bound_structs = "warn"
same_functions_in_if_condition = "warn"
semicolon_if_nothing_returned = "warn"
single_match_else = "warn"
string_add_assign = "warn"
string_add = "warn"
string_lit_as_bytes = "warn"
string_to_string = "warn"
todo = "warn"
trait_duplication_in_bounds = "warn"
unimplemented = "warn"
unnested_or_patterns = "warn"
unused_self = "warn"
useless_transmute = "warn"
verbose_file_reads = "warn"
zero_sized_map_values = "warn"

# bevy's recommendation
too_many_arguments = "allow"
type_complexity = "allow"

[lints.rust]
unsafe_code = "deny"
future_incompatible = "warn"
nonstandard_style = "warn"
rust_2018_idioms = "warn"

# my recommendation (adding '_ everywhere by hand is annoying);
# this overrides a rust 2018 idiom lint
elided_lifetimes_in_paths = "allow"
